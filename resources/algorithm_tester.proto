syntax = "proto2";

message Null {
}

enum JobStatus {
	QUEUED = 0;
	RUNNING = 1;
	COMPLETED = 2;
	ERROR = 3;
}

message Timerange {
	optional int64 begin = 1;
	optional int64 end = 2;
}

message Test{
	required string algorithm_name = 1;
	required int32 run_count = 2;
}

message Job{
	required string job_id = 1;
	optional Test test = 2;
	optional JobStatus status = 3;
	optional int64 start = 4;
	optional int64 end = 5;
	optional double completion = 6;
}

message Entry{
	required Job job = 1;
}

message SearchQuery{
	optional JobStatus status = 1;
	optional Timerange start = 2;
	optional Timerange end = 3;
	optional string algorithm = 4;
	optional int32 run_count = 5;
}

service TimeTester {
	rpc RunTest(Test) returns (Job) {}
	rpc CheckStatus(Job) returns (Job) {}
}

service EntryService {
	rpc List(Null) returns (stream Entry) {}
	rpc Find(SearchQuery) returns (stream Entry) {}
}
